
    
    
    model{
    
    # PRIORS FOR REGRESSION PARAMETERS
    for(m in 1:5){          ## Nov, Dec, Jan, Feb, Mar
      #for(y in 1:2){
        intercept.occu[m] ~ dnorm(0, 0.5)  ## month-year-specific intercept for occurrence of bycatch
        intercept.abund[m] ~ dnorm(0, 0.5)  ## month-year-specific intercept for quantity of bycatch
      #}
    }
    
    treat.occu ~ dnorm(0, 0.5)
    treat.abund ~ dnorm(0, 0.5)
    
    
    # RANDOM TRIP EFFECTS FOR OCCURRENCE AND ABUNDANCE
    for(t in 1:ntrips){
      occ.trip[t]~dnorm(0,tau.occ.trip)    ## trip-specific random effect for occurrence
      abund.trip[t]~dnorm(0,tau.ab.trip)    ## trip-specific random effect for abundance
    }
    tau.occ.trip<-1/(sigma.occ.trip*sigma.occ.trip)
    sigma.occ.trip~dunif(0,2)
    tau.ab.trip<-1/(sigma.ab.trip*sigma.ab.trip)
    sigma.ab.trip~dunif(0,2)
    
    
    
    # LIKELIHOOD LOOP OVER  every observation
    for(i in 1:N){
    
    # define the logistic regression model, where psi is the probability of bycatch occurring at all
    # used a complementary log link function to incorporate effort offset
      psi[i] <- 1 - exp(-exp(mu[i]))   ### replaced     logit(psi[i])
      mu[i]<-intercept.occu[month[i]] + eff[i] + treat.occu*TREATMENT[i] + occ.trip[ind[i]]
      z[i]~dbern(psi[i])
    
    # define the poisson regression model for abundance and multiply with bycatch probability
      y[i] ~ dpois(phi[i])
      phi[i]<-lambda[i]*z[i]
      log(lambda[i])<- log(eff[i]) + intercept.abund[month[i]] + treat.abund*TREATMENT[i] + abund.trip[ind[i]]
    
    } ## end loop over each observation
    
    
    ## Computation of fit statistic (Bayesian p-value)
    
    for(i in 1:N){
    
    # Actual data
      sd.resi[i]<-sqrt(phi[i]*(1-psi[i])) +0.5
      E[i]<-(y[i]-phi[i])/ sd.resi[i]
      E2[i] <- pow(E[i],2)
    
    # Replicate data
      M.new[i]~dpois(phi[i])
      E.new[i]<-(M.new[i]-phi[i])/sd.resi[i]
      E2.new[i] <- pow(E.new[i], 2)
    }
    
    fit <- sum(E2[])              ### Sum up squared residuals for actual data set
    fit.new <- sum(E2.new[])      ### Sum up squared residuals for replicate data sets
    
    
    
} ## end model
    
    
